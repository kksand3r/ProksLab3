@page "/fueltypes/delete/{Id:int}"
@inject HttpClient Http
@inject NavigationManager NavManager
@using Proks_UI.DTOs

<style>
    h3 {
        color: #333;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    p {
        max-width: 400px;
        font-size: 1.1rem;
        color: #555;
        margin-bottom: 1.5rem;
    }

    button {
        padding: 8px 16px;
        margin-right: 10px;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        user-select: none;
        transition: background-color 0.2s ease;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

        .btn-danger:hover {
            background-color: #a71d2a;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #565e64;
        }
</style>

<h3>Delete Fuel Type</h3>

@if (fuelType == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>Are you sure you want to delete the fuel type <strong>@fuelType.Name</strong>?</p>

    <button class="btn btn-danger" @onclick="DeleteFuelType">Delete</button>
    <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private FuelTypeDto? fuelType;

    protected override async Task OnInitializedAsync()
    {
        fuelType = await Http.GetFromJsonAsync<FuelTypeDto>($"api/fueltypes/{Id}");
    }

    private async Task DeleteFuelType()
    {
        var response = await Http.DeleteAsync($"api/fueltypes/{Id}");
        if (response.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("/fueltypes");
        }
    }

    private void Cancel() => NavManager.NavigateTo("/fueltypes");
}
