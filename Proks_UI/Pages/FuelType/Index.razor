@page "/fueltypes"
@inject HttpClient Http
@inject NavigationManager NavManager
@using Proks_UI.DTOs

<style>
    h3 {
        margin-bottom: 1rem;
        color: #333;
    }

    a {
        text-decoration: none;
        color: #007bff;
        margin-right: 10px;
    }

        a:hover {
            text-decoration: underline;
        }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 1rem;
    }

    th, td {
        padding: 10px;
        border: 1px solid #ddd;
        text-align: left;
    }

    th {
        background-color: #f8f8f8;
        font-weight: bold;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    .btn-primary {
        display: inline-block;
        padding: 6px 12px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        text-decoration: none;
        font-size: 0.9rem;
        margin-bottom: 1rem;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-secondary {
        padding: 4px 10px;
        background-color: #6c757d;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 0.85rem;
        margin-right: 5px;
        cursor: pointer;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .btn-danger {
        padding: 4px 10px;
        background-color: #dc3545;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 0.85rem;
        cursor: pointer;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    .alert {
        padding: 10px 15px;
        margin-top: 1rem;
        border-radius: 4px;
        color: white;
        background-color: #dc3545;
    }
</style>

<h3>Fuel Types</h3>

<button class="btn-primary" @onclick='() => NavManager.NavigateTo("/fueltype/create")'>+ Add Fuel Type</button>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert">@errorMessage</div>
}
else if (fuelTypes == null)
{
    <p><em>Loading...</em></p>
}
else if (!fuelTypes.Any())
{
    <p>No fuel types available.</p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var fuel in fuelTypes)
            {
                <tr>
                    <td>@fuel.Name</td>
                    <td>
                        <button class="btn-secondary" @onclick="() => EditFuelType(fuel.Id)">Edit</button>
                        <button class="btn-danger" @onclick="() => DeleteFuelType(fuel.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<FuelTypeDto>? fuelTypes;
    string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            fuelTypes = await Http.GetFromJsonAsync<List<FuelTypeDto>>("api/fueltypes");
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"Не вдалося завантажити дані: {ex.Message}";
        }
    }

    void EditFuelType(int id) => NavManager.NavigateTo($"/fueltypes/edit/{id}");

    void DeleteFuelType(int id) => NavManager.NavigateTo($"/fueltypes/delete/{id}");
}
